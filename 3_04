import numpy as np

rnd=np.random.default_rng()
a=rnd.integers(1,101,20)
print(a)

#[31 48 74 32  1 30 89 65 49 36  8 70 22 22 51 92 46 52 88 83]


sum=a[3:20:3].sum()
print(sum)

#359


proizvod=a[-1:-5:-1].prod()
print(proizvod)

#17471168


niz=np.append(a[5:9],a[15:19])
print(niz)

#[30 89 65 49 92 46 52 88]


niz=np.append(a[:10],a[:9:-1])
print(niz)

#[31 48 74 32  1 30 89 65 49 36 83 88 52 46 92 51 22 22 70  8]


niz=np.append(a[1::1],a[0])
print(niz)

#[48 74 32  1 30 89 65 49 36  8 70 22 22 51 92 46 52 88 83 31]


niz[0:20:2] + niz[1:20:2]

#array([122,  33, 119, 114,  44,  92,  73, 138, 140, 114])


niz=np.linspace(4,6,23)
print(niz)

#[4.         4.09090909 4.18181818 4.27272727 4.36363636 4.45454545
#4.54545455 4.63636364 4.72727273 4.81818182 4.90909091 5.
#5.09090909 5.18181818 5.27272727 5.36363636 5.45454545 5.54545455
#5.63636364 5.72727273 5.81818182 5.90909091 6.        ]


u=rnd.random(10)
v=rnd.random(10)
v=v*10
u=u*10

proizvod=u*v
print(proizvod)

#[ 6.21106431 10.49637169 40.37644977  5.68954765 51.67454844 11.10246396
# 4.67602487  8.54642443 34.33497767 18.73094761]


zbir=(u-v)**2
print(zbir.sum())

#170.57227751124418


niz=np.linspace(0,np.pi,16)
print(np.vstack((niz,np.sin(niz),np.cos(niz))))

#[[ 0.00000000e+00  2.09439510e-01  4.18879020e-01  6.28318531e-01
#  8.37758041e-01  1.04719755e+00  1.25663706e+00  1.46607657e+00
#  1.67551608e+00  1.88495559e+00  2.09439510e+00  2.30383461e+00
#  2.51327412e+00  2.72271363e+00  2.93215314e+00  3.14159265e+00]
#[ 0.00000000e+00  2.07911691e-01  4.06736643e-01  5.87785252e-01
#  7.43144825e-01  8.66025404e-01  9.51056516e-01  9.94521895e-01
#  9.94521895e-01  9.51056516e-01  8.66025404e-01  7.43144825e-01
#  5.87785252e-01  4.06736643e-01  2.07911691e-01  1.22464680e-16]
#[ 1.00000000e+00  9.78147601e-01  9.13545458e-01  8.09016994e-01
#  6.69130606e-01  5.00000000e-01  3.09016994e-01  1.04528463e-01
# -1.04528463e-01 -3.09016994e-01 -5.00000000e-01 -6.69130606e-01
# -8.09016994e-01 -9.13545458e-01 -9.78147601e-01 -1.00000000e+00]]


A=np.linspace(0,8*np.pi/9,9).reshape(3,3)
matrica=np.sin(A)*np.cos(A)
print(matrica)

#[ 0.          0.3213938   0.49240388]
#[ 0.4330127   0.17101007 -0.17101007]
#[-0.4330127  -0.49240388 -0.3213938 ]]


M=rnd.integers(-4,5,(6,6))
print(M)

#[[ 2 -3  4  3  2  4]
#[ 1 -2 -4 -4  0 -3]
#[ 0 -2  3 -3  3  0]
#[ 0 -3 -4  4 -4 -2]
#[ 4 -4  2 -4  4  2]
#[-1  3 -2  0 -1  2]]


podM=M[3::3]
print(podM)

#[[ 0 -3 -4  4 -4 -2]]


np.flip(M[::])

#array([[ 2, -1,  0, -2,  3, -1],
#      [ 2,  4, -4,  2, -4,  4],
#      [-2, -4,  4, -4, -3,  0],
#      [ 0,  3, -3,  3, -2,  0],
#      [-3,  0, -4, -4, -2,  1],
#      [ 4,  2,  3,  4, -3,  2]])


zbir=M[:,1]+M[2]
print(zbir)

#[-3 -4  1 -6 -1  3]


print(max(M.max(),abs(M.min())))

#4


M=M-M.min()
print(M)

#[[6 1 8 7 6 8]
#[5 2 0 0 4 1]
#[4 2 7 1 7 4]
#[4 1 0 8 0 2]
#[8 0 6 0 8 6]
#[3 7 2 4 3 6]]


M.sum(1).max()

#36


M.sum(0).max()/6

#5.0


M=rnd.random(10)
M=M*2-1
print(np.arcsin(M.max())/np.pi,"pi")

#
0.36512204635557377 pi
 
